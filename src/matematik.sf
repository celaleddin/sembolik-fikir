sf >

pi @cl:pi olsun.

(a *: b) =: (a b @cl:*).
(a çarpı: b) =: (a *: b).
(a kere: b) =: (a *: b).
(sayılar *) =: (
  @(apply #'cl:* |sayılar|)
).
(sayılar çarp) =: (sayılar *).

(a /: b) =: (a b @cl:/).
(a bölü: b) =: (a /: b).
(sayılar /) =: (
  @(apply #'cl:/ |sayılar|)
).
(sayılar böl) =: (sayılar /).

(a +: b) =: (a b @cl:+).
(a artı: b) =: (a +: b).
(sayılar +) =: (
  @(apply #'cl:+ |sayılar|)
).
(sayılar topla) =: (sayılar +).

(a -: b) =: (a b @cl:-).
(a eksi: b) =: (a -: b).
(sayılar -) =: (
  @(apply #'cl:- |sayılar|)
).
(sayılar çıkar) =: (sayılar -).

(a'nın karesi) olsun: (
  a çarpı: a.
).

(a tek-mi?) =: (a @cl:oddp).
(a çift-mi?) =: (
  değil: (a tek-mi?).
).

(a negatif-mi?) =: (a @cl:minusp).
(a sıfır-mı?) =: (a @cl:zerop).
(a pozitif-mi?) =: (a @cl:plusp).

(a b'den büyük-mü?) =: (a b @cl:>).
(a b'den küçük-mü?) =: (a b @cl:<).
(a >: b) =: (a b @cl:>).
(a <: b) =: (a b @cl:<).
(a >=: b) =: (a b @cl:>=).
(a <=: b) =: (a b @cl:<=).
(sayılar >) =: (@(apply #'cl:> |sayılar|)).
(sayılar <) =: (@(apply #'cl:< |sayılar|)).
(sayılar >=) =: (@(apply #'cl:>= |sayılar|)).
(sayılar <=) =: (@(apply #'cl:<= |sayılar|)).

(a b'ye eşit-mi?) =: (a b @cl:=).
(a b'ye eşit-değil-mi?) =: (
  değil: (a b'ye eşit-mi?).
).
;; `=, !=` arayüzleri ile `>, <, >=, <=` arayüzleri farklı?
(a b =) =: (a b'ye eşit-mi?).
(a b !=) =: (a b'ye eşit-değil-mi?).

(a sayı-mı?) =: (a @numberp).
(a reel-sayı-mı?) =: (a @realp).
(a rasyonel-sayı-mı?) =: (a @rationalp).
(a ondalık-sayı-mı?) =: (a @floatp). ;; 'Ondalık' doğru kelime mi?
(a tam-sayı-mı?) =: (a @integerp).
(a kompleks-sayı-mı?) =: (a @complexp).

(a 1+) =: (a artı: 1).
(a 1-) =: (a eksi: 1).

(a'nın karekökü) =: (a @cl:sqrt).

(a üssü: b) =: (a b @cl:expt).
(a üzeri: b) =: (a üssü: b).
(a ^: b) =: (a üssü: b).

(radyan->derece: radyan) =: (
  (radyan bölü: pi) çarpı: 180.
).
(derece->radyan: derece) =: (
  (derece çarpı: pi) bölü: 180.
).

(sin: a) =: ((derece->radyan: a) @cl:sin).
(cos: a) =: ((derece->radyan: a) @cl:cos).
(tan: a) =: ((derece->radyan: a) @cl:tan).

(asin: a) =: ((derece->radyan: a) @cl:asin).
(acos: a) =: ((derece->radyan: a) @cl:acos).
(atan: a) =: ((derece->radyan: a) @cl:atan).

(sayı-listesi'nin minimumu) =: (
  @(apply #'min |sayı-listesi|)
).

(sayı-listesi'nin maksimumu) =: (
  @(apply #'max |sayı-listesi|)
).

(a'yı yuvarla) =: (a @cl:round).
(a'yı aşağı-yuvarla) =: (a @cl:floor).
(a'yı yukarı-yuvarla) =: (a @cl:ceiling).
(a'yı ondalıktan-kurtar) =: (a @cl:truncate).

(a mod: b) =: (a b @cl:mod).

(a'nın işareti) =: (a @cl:signum).

(rastgele-sayı: maksimum) =: (maksimum @cl:random).
(limit'ten-küçük rastgele-sayı) =: (rastgele-sayı: limit).

(a'yla b'arasında rastgele-sayı) =: (
  küçük-sayı ({a b}'nin minimumu),
  büyük-sayı ({a b}'nin maksimumu) olsun: (
    ((büyük-sayı eksi: küçük-sayı)'dan-küçük rastgele-sayı) artı: küçük-sayı.
  ).
).

(rasyonel-sayı'nın payı) =: (rasyonel-sayı @cl:numerator).
(rasyonel-sayı'nın paydası) =: (rasyonel-sayı @cl:denominator).

(kompleks-sayı'nın gerçek-kısmı) =: (kompleks-sayı @cl:realpart).
(kompleks-sayı'nın sanal-kısmı) =: (kompleks-sayı @cl:imagpart).

(mutlak-değer: a) =: (a @cl:abs).
(a'nın mutlak-değeri) =: (mutlak-değer: a).

(f'nin türevi) olsun: (
  [ t |
    delta-x 1/100000
    delta-y ((f'nin (t artı: delta-x)'te değeri) eksi:
             (f'nin t'de değeri)) olsun: (
      delta-y bölü: delta-x.
    ).
  ]
).
